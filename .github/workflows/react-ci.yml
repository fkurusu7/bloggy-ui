# .github/workflows/react-ci.yml
name: React App CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Clear npm cache
        run: npm cache clean --force

      # Remove cache step for now since it might be causing issues
      # - name: Cache node modules
      #   uses: actions/cache@v4
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - name: Install dependencies the safe way
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Install specific Rollup dependencies
        run: npm install @rollup/rollup-linux-x64-gnu

      - name: Check style
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: dist/

  # Add this job if you want to deploy to a hosting service
  # deploy:
  #   needs: build-and-test
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: react-build
  #         path: dist
  #
  #     - name: Deploy to hosting service
  #       # Add deployment steps based on your hosting provider
  #       # For example, for Firebase:
  #       # uses: FirebaseExtended/action-hosting-deploy@v0
  #       # with:
  #       #   repoToken: '${{ secrets.GITHUB_TOKEN }}'
  #       #   firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
  #       #   projectId: your-firebase-project-id
  #       #   channelId: live
